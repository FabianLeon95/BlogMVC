@model BlogMVC.ViewModels.PostViewModel

@{
    ViewBag.Title = "Nuevo post";
}

<h2 class="mb-4">Nuevo Post</h2>

<div class="card mb-4 shadow">
    <div class="card-body">
        @using (Html.BeginForm("Create", "Posts", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title)
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description)
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Content)
                    @Html.TextAreaFor(model => model.Content, new { @class = "form-control", rows = "3" })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryId)
                    @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ImageFile)
                    <div class="custom-file">
                        <input type="file" class="custom-file-input" name="ImageFile" id="ImageFile" lang="es">
                        <label class="custom-file-label" for="ImageFile">Seleccionar Archivo</label>
                        @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
                    </div>
                </div>

                <input type="submit" value="Crear" class="btn btn-primary mt-3 float-right shadow-sm" />

            </div>
        }
    </div>
</div>

<div>
    @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-secondary shadow-sm" })
</div>

@section scripts
{
    @Scripts.Render("~/Scripts/bs-custom-file-input.js")
    @Scripts.Render("~/Scripts/init-custom-file-input.js")
}